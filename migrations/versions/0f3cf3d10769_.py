"""empty message

Revision ID: 0f3cf3d10769
Revises:
Create Date: 2020-03-25 11:33:16.558678

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0f3cf3d10769'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enrollment_terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('workflow_state', sa.String(), nullable=True),
    sa.Column('sis_term_id', sa.String(), nullable=True),
    sa.Column('sis_import_id', sa.Integer(), nullable=True),
    sa.Column('current_term', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('alignments', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('courses', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('grades', 'course_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('grades', 'grade',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('grades', 'record_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('grades', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_grades_course_id'), 'grades', ['course_id'], unique=False)
    op.drop_index('grades_course_idx', table_name='grades')
    op.create_foreign_key(None, 'grades', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'grades', 'records', ['record_id'], ['id'])
    op.create_foreign_key(None, 'grades', 'courses', ['course_id'], ['id'])
    # op.alter_column('outcome_averages', 'course_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    # op.alter_column('outcome_averages', 'outcome_avg',
    #            existing_type=postgresql.DOUBLE_PRECISION(precision=53),
    #            nullable=True)
    # op.alter_column('outcome_averages', 'outcome_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    # op.alter_column('outcome_averages', 'user_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    # op.create_foreign_key(None, 'outcome_averages', 'outcomes', ['outcome_id'], ['id'])
    # op.create_foreign_key(None, 'outcome_averages', 'courses', ['course_id'], ['id'])
    op.alter_column('outcome_results', 'alignment_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('outcome_results', 'course_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('outcome_results', 'last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('outcome_results', 'outcome_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('outcome_results', 'submitted_or_assessed_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('outcome_results', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_outcome_results_course_id'), 'outcome_results', ['course_id'], unique=False)
    op.drop_index('outcome_results_course_idx', table_name='outcome_results')
    op.create_foreign_key(None, 'outcome_results', 'alignments', ['alignment_id'], ['id'])
    op.create_foreign_key(None, 'outcome_results', 'outcomes', ['outcome_id'], ['id'])
    op.create_foreign_key(None, 'outcome_results', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'outcome_results', 'courses', ['course_id'], ['id'])
    op.drop_column('outcome_results', 'dropped')
    op.alter_column('outcomes', 'calculation_int',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('records', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('records', 'term_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('records', 'term_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('records', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('outcomes', 'calculation_int',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('outcome_results', sa.Column('dropped', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'outcome_results', type_='foreignkey')
    op.drop_constraint(None, 'outcome_results', type_='foreignkey')
    op.drop_constraint(None, 'outcome_results', type_='foreignkey')
    op.drop_constraint(None, 'outcome_results', type_='foreignkey')
    op.create_index('outcome_results_course_idx', 'outcome_results', ['course_id'], unique=False)
    op.drop_index(op.f('ix_outcome_results_course_id'), table_name='outcome_results')
    op.alter_column('outcome_results', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('outcome_results', 'submitted_or_assessed_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('outcome_results', 'outcome_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('outcome_results', 'last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('outcome_results', 'course_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('outcome_results', 'alignment_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # op.drop_constraint(None, 'outcome_averages', type_='foreignkey')
    # op.drop_constraint(None, 'outcome_averages', type_='foreignkey')
    # op.alter_column('outcome_averages', 'user_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=False)
    # op.alter_column('outcome_averages', 'outcome_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=False)
    # op.alter_column('outcome_averages', 'outcome_avg',
    #            existing_type=postgresql.DOUBLE_PRECISION(precision=53),
    #            nullable=False)
    # op.alter_column('outcome_averages', 'course_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=False)
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.drop_constraint(None, 'grades', type_='foreignkey')
    op.create_index('grades_course_idx', 'grades', ['course_id'], unique=False)
    op.drop_index(op.f('ix_grades_course_id'), table_name='grades')
    op.alter_column('grades', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('grades', 'record_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('grades', 'grade',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('grades', 'course_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('courses', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('alignments', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_table('enrollment_terms')
    # ### end Alembic commands ###
